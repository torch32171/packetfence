[general]
#
# general.domain
#
# Domain name of PacketFence system.
domain=packetfence.org
#
# general.hostname
#
# Hostname of PacketFence system.  This is concatenated with the domain in Apache rewriting rules and therefore must be resolvable by clients.
hostname=packetfence
#
# general.dhcpservers
#
# Comma-delimited list of DHCP servers.  Passthroughs are created to allow DHCP transactions from even "trapped" nodes.
dhcpservers=127.0.0.1
#
# general.timezone
#
#System's timezone in string format. List generated from Perl library DataTime::TimeZone
timezone=America/Montreal

[network]
#
# network.dhcpdetector
#
# If enabled, PacketFence will monitor DHCP-specific items such as rogue DHCP services, DHCP-based OS fingerprinting, computername/hostname 
# resolution, and (optionnally) option-82 location-based information.  The monitored DHCP packets are DHCPDISCOVERs and DHCPREQUESTs - both are broadcasts, 
# meaning a span port is not necessary.  This feature is highly recommended if the internal network is DHCP-based.
dhcpdetector=enabled
#
# network.dhcp_rate_limiting
#
# Will rate-limit DHCP packets that contain the same information.
# For example, a DHCPREQUEST for the same MAC/IP will only be processed once in the timeframe configured below.
# This is independant of the DHCP server/relay handling the packet and is only based on the IP, MAC Address and DHCP type inside the packet.
# A value of 0 will disable the rate limitation.
dhcp_rate_limiting=5s
#
# network.rogue_dhcp_detection
#
# Tries to identify Rogue DHCP Servers and triggers the 1100010 violation if one is found.
# This feature is only available if the dhcpdetector is activated.
rogue_dhcp_detection=enabled
#
# network.rogueinterval
#
# When rogue DHCP server detection is enabled, this parameter defines how often to email administrators.  With its default 
# setting of 10, it will email administrators the details of the previous 10 DHCP offers.
rogueinterval=10
#
# network.hostname_change_detection
#
# Will identify hostname changes and send an e-mail with these changes.
# This can help detect MAC spoofing.
hostname_change_detection=disabled
#
# network.dhcpoption82logger
#
# If enabled PacketFence will monitor DHCP option82 location-based information.
# This feature is only available if the dhcpdetector is activated.
dhcpoption82logger=disabled
#
# network.dhcp_filter_by_message_types
#
# Which dhcp message types are being listened by the pfdhcplistener.
# Do not change unless you know what you are doing
#Possibilities are: DHCPOFFER,DHCPREQUEST,DHCPDECLINE,DHCPACK,DHCPRELEASE
dhcp_filter_by_message_types=DHCPREQUEST,DHCPACK
#
# network.force_listener_update_on_ack
#
# This will only do the iplog update and other DHCP related task on a DHCPACK.
# You need to make sure the UDP reflector is in place so this works on the production network.
# This is implicitly activated on registration interfaces on which dhcpd runs.
force_listener_update_on_ack=disabled
#
# network.interfaceSNAT
# Choose interface(s) where you want to enable snat for passthrough (by default it's the management interface)
interfaceSNAT=
#
#
# This section allows you to configure locally proxied content.  We typically use this to proxy tools like Stinger rather 
# than having to continually download the latest version. Ex:
# 
# <i>tools/stinger.exe=http://download.nai.com/products/mcafee-avert/stng260.exe</i>
# 
# The Stinger utility could then be accessed at https://pfhostname/proxies/tools/stinger.exe.
[proxies]
tools/stinger.exe=http://download.nai.com/products/mcafee-avert/stng260.exe

[fencing]
#
# fencing.redirtimer
#
# How long to display the progress bar during trap release. Default value is 
# based on VLAN enforcement techniques. Inline enforcement only users could
# lower the value.
redirtimer=20s
# 
# fencing.wait_for_redirect
#
# How many seconds should the WebAPI sleep before actually triggering the VLAN change.
# This is meant to give the device enough time to fetch the redirection page before 
# switching VLAN.
wait_for_redirect = 1
#
# fencing.whitelist
#
# Comma-delimited list of MAC addresses that are immune to isolation. In 
# inline level 2 enforcement, the firewall is opened for them as if they were 
# registered. This "feature" will probably be reworked in the future.
whitelist=
#
# fencing.range
#
# Comma-delimited list of address ranges/CIDR blocks that Snort/Suricata will monitor/detect/trap on.  Gateway, network, and 
# broadcast addresses are ignored.
range=
#
# fencing.passthrough
#
# When enabled, pfdns will resolve the real IP addresses of passthroughs and add them in the ipset session to give access
# to trapped devices. Don´t forget to enable ip_forward on your server.
passthrough=disabled
#
# fencing.passthroughs
#
# Comma-delimited list of domains to be used as HTTP and HTTPS passthroughs to web sites.
#
passthroughs=
#
# fencing.proxy_passthroughs
#
# Comma-delimited list of domains to be use for apache passthrough
proxy_passthroughs=crl.geotrust.com,ocsp.geotrust.com,crl.thawte.com,ocsp.thawte.com,crl.comodoca.com,ocsp.comodoca.com,crl.incommon.org,ocsp.incommon.org,crl.usertrust.com,ocsp.usertrust.com,mscrl.microsoft.com,crl.microsoft.com,ocsp.apple.com,ocsp.digicert.com,ocsp.entrust.com,srvintl-crl.verisign.com,ocsp.verisign.com,ctldl.windowsupdate.com,crl.globalsign.net,pki.google.com,www.microsoft.com,crl.godaddy.com,ocsp.godaddy.com,certificates.godaddy.com,crl.globalsign.com,secure.globalsign.com,cacerts.digicert.com,crt.comodoca.com,crl.incommon-rsa.org,crl.quovadisglobal.com,cert.incommon.org,crt.usertrust.com,crl.verisign.com,crl.starfieldtech.com,developer.apple.com,ts-crl.ws.symantec.com,certificates.intel.com
#
# fencing.isolation_passthrough
#
# When enabled, pfdns will resolve the real IP addresses of passthroughs and add them in the ipset session to give access
# to trapped devices. Don´t forget to enable ip_forward on your server.
isolation_passthrough=disabled
#
# fencing.isolation_passthroughs
#
# Comma-delimited list of domains to be used as HTTP and HTTPS passthroughs to web sites.
#
isolation_passthroughs=
#
# fencing.interception_proxy
#
# When enabled, packetfence will intercept proxy request to somes specified port
interception_proxy=disabled
#
# fencing.interception_proxy_port
#
# Comma-delimited list of port used to intercept proxy traffic
interception_proxy_port=8080,3128

[guests_admin_registration]
#
# guests_admin_registration.access_duration_choices
#
# These are all the choices offered in the guest management interface as 
# possible access duration values for a given registration.
access_duration_choices=1h,3h,12h,1D,2D,3D,5D
#
# guests_admin_registration.default_access_duration
#
# This is the default access duration value selected in the dropdown on the 
# guest management interface.
default_access_duration=12h

[alerting]
#
# alerting.emailaddr
#
# Email address to which notifications of rogue DHCP servers, violations with an action of "email", or any other 
# PacketFence-related message goes to.
emailaddr=pf@localhost
#
# alerting.fromaddr
#
# Source email address for email notifications. Empty means root@<server-domain-name>.
fromaddr=
#
# alerting.smtpserver
#
# Server through which to send messages to the above emailaddr.  The default is localhost - be sure you're running an SMTP 
# host locally if you don't change it!
smtpserver=localhost
#
# alerting.subjectprefix
#
#Subject prefix for email notifications of rogue DHCP servers, violations with an action of "email", or any other
#PacketFence-related message.
subjectprefix=PF Alert:
#
# alerting.smtp_encryption
#
# Encryption style when connecting to the SMTP server.
smtp_encryption=none
#
# alerting.smtp_port
#
# The port of the SMTP server.
# If the port is set to 0 then port is calculated by the encryption type.
# none:25, ssl:465, starttls:587
smtp_port=0
#
# alerting.smtp_username
#
# The username used to connect to the SMTP server
smtp_username=
#
# alerting.smtp_password
#
# The password used to connect to the SMTP server
smtp_password=
#
# alerting.smtp_verify_ssl
#
# Verify SSL connection
smtp_verifyssl=enabled
#
# alerting.smtp_timeout
#
# The timeout in seconds for sending an email
smtp_timeout=20

[ports]
#
# ports.admin
#
# Port the administrative interface listens on.
admin=1443
#
# ports.soap
#
# Port of the soap interface listens on.
soap=9090
#
# ports.collector
#
# Port of the collector interface listens on.
collector=9292
#
# ports.aaa
#
# Port of the aaa http interface listens on.
aaa=7070
#
#port.pf_status
#
# Port of the packetfence status http interface listends on.
pf_status=9191
#
# ports.httpd_portal_modstatus
#
# Port the mod_status for httpd.portal listens on.
httpd_portal_modstatus=1444

[database]
#
# database.host
#
# Server the MySQL server is running on.
host=localhost
#
# database.port
#
# Port the MySQL server is running on.
port=3306
#
# database.db
#
# Name of the MySQL database used by PacketFence.
db=pf
#
# database.user
#
# Username of the account with access to the MySQL database used by PacketFence. Changing this parameter after the initial configuration will *not* change it in the database it self, only in the configuration.
user=pf
#
# database.pass
#
# Password for the mysql database used by PacketFence. Changing this parameter after the initial configuration will *not* change it in the database it self, only in the configuration.
pass=packet

[database_advanced]
#
# database_advanced.key_buffer_size
#
# The key_buffer_size MySQL configuration attribute (in MB). Only change if you know what you are doing. Will only affect a locally running MySQL server.
key_buffer_size=100
#
# database_advanced.innodb_buffer_pool_size
#
# The innodb_buffer_pool_size MySQL configuration attribute (in MB). Only change if you know what you are doing. Will only affect a locally running MySQL server.
innodb_buffer_pool_size=500
#
# database_advanced.innodb_additional_mem_pool_size
#
# The innodb_additional_mem_pool_size MySQL configuration attribute (in MB). Only change if you know what you are doing. Will only affect a locally running MySQL server.
innodb_additional_mem_pool_size=20
#
# database_advanced.query_cache_size
#
# The query_cache_size MySQL configuration attribute. Only change if you know what you are doing. Will only affect a locally running MySQL server.
query_cache_size=0
#
# database_advanced.thread_concurrency
#
# The thread_concurrency MySQL configuration attribute. Only change if you know what you are doing. Will only affect a locally running MySQL server.
thread_concurrency=8
#
# database_advanced.max_connections
#
# The max_connections MySQL configuration attribute. Only change if you know what you are doing. Will only affect a locally running MySQL server.
max_connections=1000
#
# database_advanced.table_cache
#
# The table_cache MySQL configuration attribute. Only change if you know what you are doing. Will only affect a locally running MySQL server.
table_cache=300
#
# database_advanced.thread_cache_size
#
# The thread_cache_size MySQL configuration attribute. Only change if you know what you are doing. Will only affect a locally running MySQL server.
thread_cache_size=25
#
# database_advanced.max_allowed_packet
#
# The max_allowed_packet MySQL configuration attribute (in MB). Only change if you know what you are doing. Will only affect a locally running MySQL server.
max_allowed_packet=16

[services]
#
# services.dhcpd
#
# Should DHCPd be managed by PacketFence?
dhcpd=enabled
#
# services.dhcpd_binary
#
# Location of the dhcpd binary. Only necessary to change if you are not running the RPMed version.
dhcpd_binary=/usr/sbin/dhcpd
#
# services.haproxy
#
# Should haproxy be started?
haproxy=enabled
#
# services.haproxy_binary
#
# Location of the haproxy binary. Only necessary to change if you are not running the RPMed version.
haproxy_binary=/usr/sbin/haproxy-systemd-wrapper
#
# services.pfdns
#
# Should pfdns be managed by PacketFence?
pfdns=enabled
#
# services.pffilter
#
# Should pffilter be managed by PacketFence?
pffilter=enabled
#
# services.pfsso
#
# Should pfsso be managed by PacketFence?
pfsso=enabled
#
# services.radiusd
#
# Should radiusd be managed by PacketFence?
radiusd=enabled
# 
# services.radiusd_binary
# 
# Location of the named binary. Only necessary to change if you are not running the RPMed version.
radiusd_binary=/usr/sbin/radiusd
#
# services.iptables
#
# Should iptables be managed by PacketFence?
iptables=enabled
# 
# services.iptables_binary
# 
# location of the iptables binary. only necessary to change if you are not running the rpmed version.
iptables_binary=/sbin/iptables
#
# services.pfbandwidthd
#
# Should pfbandwidthd be managed by PacketFence?
pfbandwidthd=disabled
#
# services.httpd_admin
#
# Should httpd.admin be started?
httpd_admin=enabled
#
# services.httpd_portal
#
# Should httpd.portal be started?
httpd_portal=enabled
#
# services.httpd_parking
#
# Should httpd.parking be started?
httpd_parking=enabled
#
# services.httpd_webservices
#
# Should httpd.webservices be started?
httpd_webservices=enabled
#
# services.httpd_collector
#
# Should httpd.collector be started?
httpd_collector=disabled
#
# services.httpd_dispatcher
#
# Should httpd.dispatcher be started?
httpd_dispatcher=enabled
#
# services.httpd_aaa
#
# Should httpd.aaa be started?
httpd_aaa=enabled
#
# services.httpd_proxy
#
# Should httpd.proxy be started?
httpd_proxy=enabled
#
# services.httpd_graphite
#
# Should httpd.graphite be started?
httpd_graphite=enabled
#
# services.httpd_binary
#
# Location of the apache binary. Only necessary to change if you are not running the RPMed version.
httpd_binary=/usr/sbin/httpd
#
# services.pfsetvlan
#
# Should pfsetvlan be managed by PacketFence?
pfsetvlan=disabled
#
# services.snmptrapd
#
# Should snmptrapd be managed by PacketFence?
snmptrapd=disabled
#
# services.snmptrapd_binary
#
# Location of the snmptrapd binary. Only necessary to change if you are not using the RPMed version.
snmptrapd_binary=/usr/sbin/snmptrapd
#
# services.pfqueue
#
# Should pfqueue be managed by PacketFence?
pfqueue=enabled
#
# services.pfmon
#
# Should pfmon be managed by PacketFence?
pfmon=enabled
#
# services.redis_cache
#
# Should redis be managed by PacketFence?
redis_cache=enabled
# services.redis_queue
#
# Should redis be managed by PacketFence?
redis_queue=enabled
# services.redis_ntlm_cache
#
# Should redis be managed by PacketFence?
redis_ntlm_cache=disabled
# 
# services.redis_binary
# 
# Location of the redis binary. Only necessary to change if you are not running the pre-packaged version.
redis_binary=/usr/bin/redis-server
#
# services.pfdhcplistener
#
# Should pfdhcplistener be started?
pfdhcplistener=enabled
#
# services.pfdhcplistener_packet_size
#
# Set the max size of DHCP packets
# Do not change unless you know what you are doing
pfdhcplistener_packet_size=576
#
# services.keepalived
#
# Should keepalived be started?
keepalived=enabled
#
# services.keepalived_binary
#
# Location of the keepalived binary. Only necessary to change if you are not running the RPMed version.
keepalived_binary=/usr/sbin/keepalived
# services.winbindd
#
# Should winbindd be started?
winbindd=enabled
# 
# services.winbindd_binary
# 
# location of the winbindd binary. only necessary to change if you are not running the rpmed version.
winbindd_binary=/usr/sbin/winbindd
# services.carbon-cache
#
# Should carbon-cache be started?
carbon-cache=enabled
# 
# services.carbon-cache_binary
# 
# Location of the carbon cache binary. Only necessary to change if you are not running the pre-packaged version.
carbon-cache_binary=/usr/bin/carbon-cache
#
# services.carbon-relay
#
# Should carbon-relay be started?
carbon-relay=enabled
# 
# services.carbon-relay_binary
# 
# Location of the carbon relay binary. Only necessary to change if you are not running the pre-packaged version.
carbon-relay_binary=/usr/bin/carbon-relay
#
# services.collectd
#
# Should collectd be started?
collectd=enabled
# 
# services.collectd_binary
# 
# Location of the collectd binary. Only necessary to change if you are not running the pre-packaged version.
collectd_binary=/usr/sbin/collectd
#
# services.statsd
#
# Should statsd be started?
statsd=enabled
# 
# services.statsd_binary
# 
# Location of the statsd (node) binary. Only necessary to change if you are not running the pre-packaged version.
statsd_binary=/usr/bin/node
#
# services.radsniff
#
# Should radsniff be started?
radsniff=enabled
# 
# services.radsniff_binary
# 
# Location of the radsniff binary. Only necessary to change if you are not running the pre-packaged version.
radsniff_binary=/usr/bin/radsniff
#
# services.p0f
#
# Should p0f be started?
p0f=enabled
# 
# services.p0f_binary
# 
# Location of the p0f binary. Only necessary to change if you are not running the pre-packaged version.
p0f_binary=/usr/local/bin/p0f
#
# services.openssl_binary
#
# Location of the openssl binary. Only necessary to change if you are not running the RPMed version.
openssl_binary=/usr/bin/openssl
# 
# services.arp_binary
# 
# location of the arp binary. only necessary to change if you are not running the rpmed version.
arp_binary=/sbin/arp

#
# services.routes
#
# Should routes be managed by PacketFence?
routes=enabled
#
# services.routes_binary
#
# location of the routes binary. only necessary to change if you are not running the rpmed version.
routes_binary=/sbin/ip

[snmp_traps]
#
# snmp_traps.nbtraphandlerthreads
#
# Number of trap handler threads pfsetvlan should start
nbtraphandlerthreads = 5
#
# snmp_traps.nbtrapparserthreads
#
# Number of trap parser threads pfsetvlan should start
nbtrapparserthreads = 3
#
# snmp_traps.closelocationlogonstop
#
# Should open locationlog entries be closed when pfsetvlan is 
# stopped
closelocationlogonstop=disabled
#
# snmp_traps.bounce_duration
#
# Delay to wait between the shut / no-shut on a port. Some OS need a higher value than others.
# Default should be reasonable for almost every OS but is too long for the usual proprietary OS.
bounce_duration = 4s
#
# snmp_traps.trap_limit
#
# Controls whether or not the trap_limit feature is enabled. Trap limiting is
# a way to limit the damage done by malicious users or misbehaving switch 
# that sends too many traps to PacketFence causing it to be overloaded. Trap
# limiting is controlled by the trap_limit_threshold and trap_limit_action 
# parameters. Default is enabled.
trap_limit = enabled
#
# snmp_traps.trap_limit_threshold
#
# Maximum number of SNMP traps that a switchport can send to PacketFence within
# a minute without being flagged as DoS. Defaults to 100
trap_limit_threshold = 100
#
# snmp_traps.trap_limit_action
#
# Action that PacketFence will take if the snmp_traps.trap_limit_threshold is reached.
# Defaults to none. email will send an email every hour if the limit's still reached.
# shut will shut the port on the switch and will also send an email even if email is not
# specified.
trap_limit_action = 

[inline]
# inline.accounting
#
# Should we handle accouting data for inline clients?
# This controls inline accouting tasks in pfmon.
accounting = disabled
#
# inline.layer3_accounting_session_timeout
#
# Accounting 'sessions' created by pfbandwidthd (level 3 traffic only) that haven't been updated for more than this
# amount of seconds will be considered inactive.
# This should be higher than the interval at which pfmon runs
# Defaults to 300 - 5 minutes
layer3_accounting_session_timeout = 300
# inline.layer3_accounting_sync_interval
#
# Interval at which pfbandwidthd (level 3 traffic only) should dump collected information into the database.
# This should be lower than the interval at which pfmon runs
# Defaults to 41 seconds
layer3_accounting_sync_interval = 41
#
# inline.ports_redirect
#
# Ports to intercept and redirect for trapped and unregistered systems.  Defaults to 80/tcp (HTTP), 443/tcp (HTTPS).
# Redirecting 443/tcp (SSL) will work, although users might get certificate errors if you didn't install a valid 
# certificate or if you don't use DNS (although IP-based certificates supposedly exist)
# Redirecting 53/udp (DNS) seems to have issues and is also not recommended.
# We also have experimental IMAP and POP3 listeners which give fake emails telling users to open their browsers.
# Enable them via the ports.listeners parameter and add the IMAP (143/tcp) and POP3 (110/tcp) here.
ports_redirect=80/tcp,443/tcp
#
# inline.should_reauth_on_vlan_change
# Should have to reauthenticate the node if it change vlan
should_reauth_on_vlan_change = disabled
#
# inline.interfaceSNAT
# Choose the interface(s) you want to use to enable snat (by default it´s the management interface)
interfaceSNAT=

[captive_portal]
#
# captive_portal.network_detection
#
# Enable or not the network detection feature after registration
network_detection=enabled
#
# captive_portal.network_detection_ip
#
# This IP is used as the webserver who hosts the common/network-access-detection.gif which is used to detect if network
# access was enabled. 
# It cannot be a domain name since it is used in registration or quarantine where DNS is blackholed.
# It is recommended that you allow your users to reach your packetfence server and put your LAN's PacketFence IP.
# By default we will make this reach PacketFence's website as an easy solution.
#
network_detection_ip = 192.95.20.194
#
# captive_portal.image_path
#
# This is the path where the gif is on the webserver to detect if the network access
# has been enabled.
image_path = /common/network-access-detection.gif
#
# captive_portal.request_timeout
#
# The amount of seconds before a request times out in the captive portal
request_timeout = 15
#
# captive_portal.loadbalancers_ip
#
# If the captive portal is put behind load-balancer(s) that act at Layer 7 
# (HTTP level) effectively doing reverse proxying then the captive portal no 
# longer sees the IP of the node trying to access the portal. In that case,
# the load-balancers must do SSL offloading and add a X-Forwarded-By header
# in the HTTP traffic they forward to PacketFence. Most do by default. Then
# in this parameter you must specify the IP of the various load balancers.
# This will instruct the captive portal to look for client IPs in the 
# X-Forwarded-For instead of the actual TCP session when it matches an IP
# in the list. Format is a comma separated list of IPs. Note: Apache access
# log format is not changed to automatically log the X-Forwarded-By header.
# Modify conf/httpd.conf.d/captive-portal-common.conf to use 
# loadbalanced_combined instead of combined in CustomLog statement.
loadbalancers_ip=
#
# captive_portal.secure_redirect
#
# If secure_redirect is enabled, the captive portal uses HTTPS when redirecting
# captured clients. This is the default behavior.
secure_redirect=enabled
#
# captive_portal.status_only_on_production
#
# If status_only_on_production is enabled, the /status page will only be available on the
# production network. This is disabled by default
status_only_on_production=disabled
#
# captive_portal.detection_mecanism_bypass
#
# Bypass the captive-portal detection mechanism of some browsers / end-points by proxying the detection request.
detection_mecanism_bypass = disabled
#
# captive_portal.detection_mecanism_urls
#
# Comma-delimited list of URLs known to be used by devices to detect the presence 
# of a captive portal and trigger their captive portal mechanism.
detection_mecanism_urls = http://www.gstatic.com/generate_204,http://clients3.google.com/generate_204,http://www.apple.com/library/test/success,http://connectivitycheck.android.com/generate_204,http://connectivitycheck.gstatic.com/generate_204,http://www.msftncsi.com/ncsi.txt,http://www.appleiphonecell.com,http://captive.apple.com,http://captive.roku.com/ok,http://detectportal.firefox.com/success.txt
#
# captive_portal.wispr_redirection
#
# Enable or disable WISPr redirection capabilities on the captive-portal
wispr_redirection = enabled
#
# captive_portal.rate_limiting
#
# Temporarily deny access to a user that performs too many requests on the captive portal on invalid URLs
rate_limiting = enabled
#
# captive_portal.rate_limiting_threshold
#
# Amount of requests on invalid URLs after which the rate limiting will kick in for this device
rate_limiting_threshold = 24


[advanced]
#
# advanced.language
#
# Language choice for the communication with administrators
language=en_US
#
# advanced.admin_csp_security_headers
#
# Enforce Content-Security-Policy (CSP) HTTP response header in the admin interface
#
admin_csp_security_headers=enabled
#
# advanced.portal_csp_security_headers
#
# Enforce Content-Security-Policy (CSP) HTTP response header in the captive portal interface
#
portal_csp_security_headers=enabled
#
# advanced.sso_on_access_reevaluation
#
# Trigger Single-Sign-On (Firewall SSO) on access reevaluation
sso_on_access_reevaluation=disabled
#
# advanced.record_accounting_in_sql
#
# Record the accounting data in the SQL tables.
# Requires a restart of radiusd to be effective.
record_accounting_in_sql=enabled
#
# advanced.hash_passwords
#
# The algorithm to use to hash the passwords in the local database.
hash_passwords=bcrypt
#
# advanced.hashing_cost
#
# The cost factor to apply to the password hashing if applicable.
# Currently only applies to bcrypt.
hashing_cost=8
#
# advanced.disable_pf_domain_auth
#
# Disable Active-Directory domain configuration from within PacketFence
disable_pf_domain_auth=disabled
#
# advanced.ntlm_redis_cache
#
# Enables a Redis driven cache for NTLM authentication. 
# In order for this to work, you need to setup proper NT hash syncronization between your PacketFence server and your AD.
# Refer to the Administration guide for more details.
# Applying this requires a restart of radiusd.
ntlm_redis_cache=disabled
#
# advanced.ldap_attributes
#
# List of LDAP attributes that can be used in the sources configuration
ldap_attributes=uid,cn,department,displayName,distinguishedName,givenName,memberOf,sn,eduPersonPrimaryAffiliation,mail,postOfficeBox,description,groupMembership
#
# advanced.radius_attributes
#
# List of RADIUS attributes that can be used in the sources configuration
radius_attributes=username,NAS-ID,Called-Station-Id,Calling-Station-Id
#
# advanced.pfdns_processes
#
# Amount of pfdns processes to start
pfdns_processes=4
#
# advanced.pffilter_processes
#
# Amount of pffilter processes to start
pffilter_processes=4
#
# advanced.update_iplog_with_accounting
#
# Use the information included in the accounting to update the iplog
update_iplog_with_accounting=disabled
#
# advanced.locationlog_close_on_accounting_stop
#
# Close the locationlog for a node on accounting stop
locationlog_close_on_accounting_stop=enabled
#
# advanced.timing_stats_level
#
# Level of timing stats to keep - 0 is the lowest - 10 the highest amount to log
# Do not change unless you know what you are doing
timing_stats_level=5
#
# advanced.source_to_send_sms_when_creating_users
#
# The source to use to send an SMS when creating a user
source_to_send_sms_when_creating_users=
#
# advanced.multihost
#
# Ability to manage all active devices from a same switch port
multihost=disabled
#
# advanced.normalize_radius_machine_auth_username
#
# Normalize the radius machine auth username
normalize_radius_machine_auth_username=disabled
#
# advanced.vlan_pool_technique
#
# The algorithm used to calculate the vlan in a vlan pool.
vlan_pool_technique = username_hash

[omapi]
#
# omapi.ip2mac_lookup
#
# Use OMAPI to query DHCPd for the MAC address of a given IP address
ip2mac_lookup=enabled
#
# omapi.mac2ip_lookup
#
# Use OMAPI to query DHCPd for the IP address of a given MAC address
mac2ip_lookup=enabled
#
# omapi.key_name
#
# The OMAPI key name for signing messages
key_name=pf_omapi_key
#
# omapi.key_base64
#
# The OMAPI base64 key for signing messages
key_base64=
#
# omapi.port
#
# The OMAPI port number
port=7911
#
# omapi.host
#
# The OMAPI host
host=localhost
#
# omapi.timeout
#
# The timeout on the OMAPI socket
timeout=0.5

[provisioning]
#
# provisioning.autoconfig
#
# Enable or disable the XML mobile config generation for wireless on iPhones, iPods, and iPads
autoconfig = disabled

#
# provisioning.ssid
#
# SSID name where the users need to connect to upon registration
ssid = SSID-Hidden

#
# provisioning.category
#
# Accessible to node that are member of this category
category = any

#
# provisioning.certificate
#
# Certificate to send to the node
certificate = 

[node_import]
#
# node_import.pid
#
# Default pid value to assign to imported nodes.
pid=default
#
# node_import.category
#
# Default category to assign to imported nodes.
category=default
#
# node_import.voip
#
# By default is an imported node a Voice over IP device or not?
voip=no

[webservices]
#
# webservices.user
#
# username to use to connect to the webAPI
user =
#
# webservices.pass
#
# password of the username
pass =
#
# webservices.host
#
# host of the webAPI
host=127.0.0.1
#
# webservices.proto
#
# proto to use
proto=http
#
# webservices.port
#
# port to use
port=9090
#
# webservices.aaa_port
#
# port to use for authentication
aaa_port=7070

[active_active]
#
# active_active.password
#
# Shared KEY for vrrp protocol (Must be the same on all members).
password=1234
#
# active_active.virtual_router_id
#
# Shared KEY for vrrp protocol (Must be the same on all members).
virtual_router_id=50
#
# active_active.dns_on_vip_only
#
# Set the name server option in DHCP replies to point only to the VIP in cluster mode rather than to all servers in the cluster.
dns_on_vip_only=disabled
#
# active_active.centralized_deauth
#
# Centralize the deauthentication to the management node of the cluster.
centralized_deauth=enabled
#
# active_active.auth_on_management
#
# Process RADIUS authentication requests on the management server (the current load balancer).
# Disabling it will make the management server only proxy requests to other servers.
# Useful if your load balancer cannot handle both tasks.
# Changing this requires to restart radiusd.
auth_on_management=enabled
#
# active_active.conflict_resolution_threshold
#
# Defines the amount of seconds after which pfmon attempts to resolve a configuration version conflict between cluster members.
# For example, if this is set to 5 minutes, then a resolution will be attempted when the members will be detected running a different version for more than 5 minutes.
conflict_resolution_threshold=5m
#
# active_active.galera_replication
#
# Whether or not to activate galera cluster when using a cluster
galera_replication=enabled
#
# active_active.galera_replication_username
#
# Defines the replication username to be used for the MariaDB Galera cluster replication
galera_replication_username=
#
# active_active.galera_replication_password
#
# Defines the replication password to be used for the MariaDB Galera cluster replication
galera_replication_password=

[graphite]
#
# graphite.graphite_host
#
graphite_host=localhost

#
# graphite.graphite_port
#
graphite_port=2013

#
# graphite.db_port
#
db_port=

#
# graphite.db_host
#
db_host=

#
# graphite.db_user
#
db_user=

#
# graphite.db_pass
#
db_pass=

[metadefender]
#
# metadefender.api_key
#
# OPSWAT Metadefender Cloud Scanner API key
api_key=

#
# metadefender.query_url_hash
#
# OPSWAT Metadefender Cloud Scanner URL for hash queries
query_url_hash=https://hashlookup.metadefender.com/v2/hash/

[parking]
#
# parking.lease_length
#
# Lease length (in seconds) when a device is in parking
lease_length=3600
#
# parking.lease_length
#
# The threshold (in seconds) after which a device will be placed in parking
# A value of 0 deactivates the parking detection.
# The detection works by looking at the time in seconds a device has been in the registration role and comparing it with this threshold
threshold=0
#
# parking.place_in_dhcp_parking_group
#
# Place the device in the DHCP parking group when it is detected doing parking
place_in_dhcp_parking_group=enabled
#
# parking.show_parking_portal
#
# Show the parking portal to the device instead of the usual portal
show_parking_portal=enabled

[mse_tab]
#
# mse_tab.enabled
#
# Enabled MSE tab
enabled=disabled
#
# mse_tab.url
#
# URL of MSE server
url=
#
# mse_tab.user
#
# Username of MSE server
user=
#
# mse_tab.pass
#
# Password of MSE server
pass=

[radius_authentication_methods]
#
# radius_authentication_methods.eap_authentication_types
#
# EAP Supported Methods. EAP-FAST is disabled by default.
eap_authentication_types=GTC,MD5,MSCHAPv2,PEAP,TLS,TTLS
#
# radius_authentication_methods.eap_fast_opaque_key
#
# EAP-FAST 32 bytes Opaque Key (Considered only if EAP-FAST is enabled)
eap_fast_opaque_key=0123456789abcdef0123456789ABCDEF
#
# radius_authentication_methods.eap_fast_authority_identity
#
# EAP-FAST authority ID (Considered only if EAP-FAST is enabled)
eap_fast_authority_identity=1234
